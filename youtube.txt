/*
Lesson 4
44:25 - Enums in JPA
57:30 - StopEntity creation
1:21:50 - Abstract Class (@MappedSuperclass)
1:26:40 - @CreationTimeStamp, boolean
2:10:00 - @Embeddable/@Embedded
2:15:00 - One-to-One relation
 */
/*
Lesson 5
34:40 - @ManyToOne many journey to one vehicle
41:38 - каскадирование @ManyToOne (cascade={CascadeType.PERSIST})
51:00 - @OneToMany
1:09:00 - Entity Life Cycle
1:16:00 - JourneyEntity Equals
1:26:00 - Lazy/Eagar загрузка
1:36:00 - findById example
2:05:45 - ManyToMany
2:47:00 - merge for updating
3:03:00 - session of EntityManager
 */
/*
Lesson 6
0:22:00 - CommonRepository Abstract class
0:25:10 - GenericRepository Interface
1:00:00 - каскадирование
1:24:00 - @OneToMany (cascade={CascadeType.PERSIST, CascadeType.MERGE})
1:41:25 - @DynamicInsert
1:51:00 - EntityManager.Contains() + detached -> managed
1:56:40 - CreateOrUpdate for complex cases
2:19:00 - removeById
2:35:16 - EntityManager..GetReference
 */

 /*
 Lesson 7
0:30:10 Оценка затратности запроса SQL. SQL Plan in Idea
0:40:00 findByIds, findAll (unwrap(Session.class))
1:05:00 @Transactional(readOnly=true)
1:09:00 findAll()
1:09:10 EntityManager.createQuery JPQL vs HQL
1:24:00 findAll HQL
1:29:00 findAll SQL
1:35:40 Criteria
2:06:00 @NamedQueries()
2:14:50 @NamedStoredProcedureQueries()
2:41:50 @NamedStoredProcedureQuery with parameters
  */

   /*
   Lesson 7
0:20:20 findByName HQL index parametrization
0:30:54 createNativeQuery SQL index parametrization
0:30:54 createQuery HQL name parametrization
0:39:10 createNativeQuery SQL name parametrization
0:43:50 criteriaBuilder
1:21:30 join example
1:32:50 Hibernate Jpamodelgen
1:54:00 HQL pagination (.setMaxResults(N), setFirstResult(N))
1:58:20 Sorting of results HQL
2:07:40 Sorting of results criteria
2:41:30 Transaction isolation levels
2:56:40 TransactionalTemplate Bean
3:06:50 Transaction propagation
    */
       Lesson 8
    0:22:00 pom.xml for Spring Data JPA
    0:28:30 DatabaseConfig
    1:09:26 @Query in JPARepository Interface
    1:14:40 Pageble, PageRequest
    1:18:40 Sorting
    1:24:05 Page<Entity> interface instead of List<Entity>
    1:34:10 CommonJPARepository (Обобщенный)
    1:36:00 Persistable Interface for AbstractModifyEntity
    1:50:50 @Modifying
    2:11:00 JpaRepository findAll(Example.of())
    2:20:00 CommonJpaRepository extending to JpaRepository and @NoRepositoryBean
    2:24:20 JpaSpecificationExecutor
    2:44:05 Example + Specification
    2:51:05 Projections
        */